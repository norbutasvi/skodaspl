import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import { SRLWrapper } from "simple-react-lightbox";
import Header from '../../../../components/Header';
import { useRouter } from 'next/router'
import Footer from '../../../../components/Footer';
import marked from 'marked';
import { getUrl } from '../../../../services/getUrl';

export async function getStaticProps(context) {

  const { params } = context;

  let product;
  product = await fetch(`${getUrl()}/products?_locale=pl-PL&slug=${params.productSlug}`);
  const productData = await product.json();

  let header;
  header = await fetch(`${getUrl()}/header?_locale=pl-PL`);
  const headerData = await header.json();

  let footer;
  footer = await fetch(`${getUrl()}/footer?_locale=pl-PL`);
  const footerData = await footer.json();

  if (productData.length === 0) {
    return {
      notFound: true,
    }
  }

  return {
    props: {
      product: productData,
      header: headerData,
      footer: footerData,
    },
    revalidate: 20
  }
}

  // This function gets called at build time
  export async function getStaticPaths({ locales }) {
    // Call an external API endpoint to get posts
    const res = await fetch(`${getUrl()}/products?_locale=pl-PL`)
    const posts = await res.json()

    const paths = posts.map((post) => ({
      params: { categorySlug: post.category.slug, productSlug: post.slug},
    }))
  
  
    return {
        fallback: 'blocking',
        paths,
     };
  }

function Index({ product, header, footer }) {

  const router = useRouter()

  const mainImage = product[0].images[0];
  const otherImages = product[0].images.filter(image => image._id !== mainImage._id);

  // product[0].images.shift();

  // test  test
  if (router.isFallback) {
    return <div>Loading...</div>
  }

    return (
        <div>
    <Head>
        <title>{product[0].title}</title>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin />
        <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap" rel="stylesheet" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
      <Header header={header} />
        <div className="product">
            <div className="texture">
              <div className="wrapper">
                <img className="icon" src="https://res.cloudinary.com/skodas-lt/image/upload/v1632902614/103436_category_settings_icon_1_whx2r6.svg" />
                <p className="category-title">{product[0].category.title}</p>
                {/* <img src="https://res.cloudinary.com/skodas-lt/image/upload/v1632848414/texture_g57g7o.png" /> */}
              </div>
            </div>
            <div className="wrapper">
                <div className="text">
                <h2 className="model-title">{product[0].title}</h2>
                <div className="paragraph" dangerouslySetInnerHTML={{ __html: product[0].description }} />
                {
                  product[0].files.map(file =>
                    <div key={file._id} className="pdf-list">
                      <a href={`${file.link}`} rel="noopener noreferrer" target="_blank">
                      <img src="https://res.cloudinary.com/skodas-lt/image/upload/v1633202270/51955_document_file_pdf_icon_xohnmw.png" />
                      <p>{file.title}</p>
                      </a>
                  </div>
                    )
                }
                </div>
                <div className="gallery">
                    <SRLWrapper>
                    <div className="main-image">
                        <img className="zoom-in" src="https://res.cloudinary.com/skodas-lt/image/upload/v1632847911/3044663_app_essential_in_interface_ui_icon_l8svbn.svg"/>
                        <a href={`${mainImage.url}`}>
                        <img src={`${mainImage.url}`} />
                        </a>
                    </div>
                    <div className="image-list">
                      {
                        otherImages.map(image =>
                          <a key={image.url} href={`${image.url}`}>
                          <img src={`${image.url}`} />
                          </a>
                          )
                      }
                    </div>
                    </SRLWrapper>
                </div>
            </div>
        </div>
      </main>
      <Footer footer={footer} />
        </div>
    )
}

export default Index
